apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: 'rabbitmq:3.13.7-management'
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: '1'
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 500Mi
          ports:
            - name: rabbitmq
              containerPort: 5672
            - name: management
              containerPort: 15672
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: admin
            - name: RABBITMQ_DEFAULT_PASS
              value: admin 
          volumeMounts:
            - name: rabbitmq-config
              mountPath: /etc/rabbitmq
            # - name: rabbitmq-data
            #   mountPath: /var/lib/rabbitmq/mnesia
      volumes:
      - name: rabbitmq-config
        configMap:
          name: rabbitmq-config
  # volumeClaimTemplates:
  #   - metadata:
  #       name: rabbitmq-data
  #     spec:
  #       accessModes:
  #         - ReadWriteMany  # Adjust based on your requirements
  #       resources:
  #         requests:
  #           storage: 10Gi  # Adjust the storage size based on your needs       

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: rabbitmq
  name: rabbitmq
spec:
  type: NodePort
  selector:
    app: rabbitmq
  ports:
    - name: rabbitmq
      port: 5672
      protocol: TCP
      targetPort: 5672
      nodePort: 30672
    - name: management
      port: 15672
      protocol: TCP
      targetPort: 15672
      nodePort: 31672